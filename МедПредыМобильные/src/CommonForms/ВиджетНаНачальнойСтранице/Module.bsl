
#Область ВспомогательныеПроцедурыИФункции

&НаСервере
Функция СкомпоноватьФорматированнуюСтроку(ЭлементыСтроки)
	
	Строка = "";
	Шрифт = Неопределено;
	ЦветТекста = Неопределено;
	ЦветФона = Неопределено;
	МассивФорматированныхСтрок = Новый Массив;
	
	Для Каждого Элемент Из ЭлементыСтроки Цикл
		Элемент.Свойство("Строка", Строка);
		Элемент.Свойство("Шрифт", Шрифт);
		Элемент.Свойство("ЦветТекста", ЦветТекста);
		Элемент.Свойство("ЦветФона", ЦветФона);
		МассивФорматированныхСтрок.Добавить(Новый ФорматированнаяСтрока(Строка, Шрифт, ЦветТекста, ЦветФона)); 
	КонецЦикла;
	
	Возврат Новый ФорматированнаяСтрока(МассивФорматированныхСтрок);
	
КонецФункции

&НаСервере
Функция СформироватьТекстЗаголовка(Заголовок, Знач ИсходнаяСумма, РазделятьРазряды = Истина, Знач ПлановаяСумма = 0)
	
	Если РазделятьРазряды И ИсходнаяСумма <> 0 Тогда
		ФорматированнаяСумма = Формат(ИсходнаяСумма, "ЧДЦ=2; ЧРГ=' '; ЧН=—; ЧГ=3,0");
		Разделитель = Найти(ФорматированнаяСумма, НСтр("ru=',';en='.'"));
		СтрокаРазрядТысячи = Лев(ФорматированнаяСумма, Разделитель - 4);
		СтрокаРазрядЕдиницы = Сред(ФорматированнаяСумма, Разделитель - 3);
	Иначе
		ФорматированнаяСумма = Формат(ИсходнаяСумма, "ЧДЦ=0; ЧРГ=' '; ЧН=—; ЧГ=3,0");
	КонецЕсли;
	
	ЭлементыСтроки = Новый Массив;
	ЭлементыСтроки.Добавить(Новый Структура("Строка, Шрифт, ЦветТекста", Заголовок, Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста), Новый Цвет(128, 128, 128)));
	ЭлементыСтроки.Добавить(Новый Структура("Строка", Символы.ПС));
	
	Если РазделятьРазряды И ИсходнаяСумма <> 0 Тогда
		ЭлементыСтроки.Добавить(Новый Структура("Строка, Шрифт, ЦветТекста", СтрокаРазрядТысячи, Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,,Истина,,,,150), Новый Цвет(253, 216, 53)));
		ЭлементыСтроки.Добавить(Новый Структура("Строка, Шрифт, ЦветТекста", СтрокаРазрядЕдиницы, Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,,,,,,100), Новый Цвет(253, 216, 53)));
	//ИначеЕсли ИсходнаяСумма = 0 Тогда
	//	ЭлементыСтроки.Добавить(Новый Структура("Строка, Шрифт, ЦветТекста", НСтр("ru='нет данных';en='no data'"), Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,,,,,,150), Новый Цвет(253, 216, 53)));
	Иначе
		ЭлементыСтроки.Добавить(Новый Структура("Строка, Шрифт, ЦветТекста", Строка(ИсходнаяСумма), Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,,Истина,,,,150), Новый Цвет(253, 216, 53)));
	КонецЕсли;
	
	Если ПлановаяСумма <> 0 Тогда
		ЭлементыСтроки.Добавить(Новый Структура("Строка, Шрифт, ЦветТекста", НСтр("ru=' из ';en=' from '"), Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,,,,,,150), Новый Цвет(253, 216, 53)));
		ЭлементыСтроки.Добавить(Новый Структура("Строка, Шрифт, ЦветТекста", Строка(ПлановаяСумма), Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,,Истина,,,,150), Новый Цвет(253, 216, 53)));
	КонецЕсли;
	
	Возврат СкомпоноватьФорматированнуюСтроку(ЭлементыСтроки);
	
КонецФункции

&НаСервере
Процедура ПолучитьКоличествоВизитовВРаботеНаСервере()
	
	Проект = Константы.ТекущийПроект.Получить();
	Элементы.ЗаказовВРаботе.Заголовок = СформироватьТекстЗаголовка(
		Нстр("ru='Визитов выполнено';en='Visits finished'"),
		Документы.Визит.ПолучитьКоличествоВизитовВСостоянии(Проект),
		Ложь, Проект.Аптеки + Проект.ЛПУ
	);
	
	
	ПолучитьКоличествоВизитовДляСупервайзераНаСервере(Проект);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьКоличествоВизитовДляСупервайзераНаСервере(Знач Проект)
	
	Если Константы.ПрофильМобильногоПриложения.Получить() = Перечисления.ПрофилиМобильногоПриложения.Супервайзер Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Проекты.Ссылка КАК Проект,
		|	Проекты.ЛПУ КАК ЛПУПлан,
		|	Проекты.Аптеки КАК АптекиПлан
		|ПОМЕСТИТЬ ВТ_План
		|ИЗ
		|	Справочник.Проекты КАК Проекты
		|ГДЕ
		|	Проекты.Ссылка = &Проект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Визит.Ответственный КАК Ответственный,
		|	СУММА(ВЫБОР
		|		КОГДА Визит.Контрагент.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ВидыКонтрагентов.ЛПУ)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК ЛПУФакт,
		|	СУММА(ВЫБОР
		|		КОГДА Визит.Контрагент.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ВидыКонтрагентов.Аптека)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК АптекиФакт,
		|	ВТ_План.ЛПУПлан КАК ЛПУПлан,
		|	ВТ_План.АптекиПлан КАК АптекиПлан
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	ВТ_План КАК ВТ_План
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Визит КАК Визит
		|		ПО ВТ_План.Проект = Визит.Проект
		|		И (Визит.Проведен)
		|ГДЕ
		|	Визит.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)
		|	И Визит.Ответственный <> &Ответственный
		|СГРУППИРОВАТЬ ПО
		|	Визит.Ответственный,
		|	ВТ_План.АптекиПлан,
		|	ВТ_План.ЛПУПлан
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.Ответственный КАК Ответственный,
		|	ВТ_Данные.ЛПУФакт КАК ЛПУ,
		|	ВЫБОР
		|		КОГДА ВТ_Данные.ЛПУПлан - ВТ_Данные.ЛПУФакт > 0
		|			ТОГДА ВТ_Данные.ЛПУПлан - ВТ_Данные.ЛПУФакт
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ост_ЛПУ,
		|	ВТ_Данные.АптекиФакт КАК Аптек,
		|	ВЫБОР
		|		КОГДА ВТ_Данные.АптекиПлан - ВТ_Данные.АптекиФакт > 0
		|			ТОГДА ВТ_Данные.АптекиПлан - ВТ_Данные.АптекиФакт
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ост_Аптек
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные"
		;
		
		Запрос = Новый Запрос(ТекстЗапроса);
		
		Запрос.УстановитьПараметр("Проект", Проект);
		Запрос.УстановитьПараметр("Дата", ТекущаяДата());
		Запрос.УстановитьПараметр("Ответственный", Константы.ТекущийПользователь.Получить());
		
		СтатистикаДиаграмма.СерииВСтроках = Ложь;
		СтатистикаДиаграмма.ИсточникДанных = Запрос.Выполнить().Выгрузить();
		Для Каждого Серия Из СтатистикаДиаграмма.Серии Цикл
			Серия.Текст = СтрЗаменить(Серия.Текст, "_", Символы.ПС);
		КонецЦикла;
		Для Каждого Точка Из СтатистикаДиаграмма.Точки Цикл
			Точка.Текст = СтрЗаменить(Точка.Текст, "_", Символы.ПС);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКоличествоВизитовВРаботе()
	
	ПолучитьКоличествоВизитовВРаботеНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьВидимость();
	НаборКонстантОбъект = РеквизитФормыВЗначение("НаборКонстант");
	НаборКонстантОбъект.Прочитать();
	ЗначениеВРеквизитФормы(НаборКонстантОбъект, "НаборКонстант");
	ПолучитьКоличествоВизитовВРаботеНаСервере();
	СтатистикаДиаграмма.Градиент = Ложь;
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Если Константы.ПрофильМобильногоПриложения.Получить() = Перечисления.ПрофилиМобильногоПриложения.Супервайзер Тогда
		Элементы.ГруппаСтатистика.Видимость = Истина;
		Элементы.ГруппаМестоположение.Видимость = Ложь;
		Элементы.ЗаказовВРаботе.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ПолучитьКоличествоВизитовВРаботе", 0.2, Истина);
	#Если МобильноеПриложениеКлиент Тогда
		Если НЕ СредстваГеопозиционирования.ИспользованиеДанныхГеопозиционированияВключено() Тогда
			Предупреждение("Для работы необходимо в настройках устройства включить геоданные!", 30, "GPS");
			ЗавершитьРаботуСистемы();
		//ИначеЕсли Вопрос("Использовать геоданные?", РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Да, "GPS", КодВозвратаДиалога.Нет) = КодВозвратаДиалога.Да Тогда
		Иначе
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьКоординаты", ЭтотОбъект);
			ИмяПровайдера = СредстваГеопозиционирования.ПолучитьСамогоТочногоПровайдера().Имя;
			СредстваГеопозиционирования.ПодключитьОбработчикИзмененияМестоположения(ОписаниеОповещения, ИмяПровайдера, , 600);
		КонецЕсли;
	#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКоординаты(ИмяПровайдера, ДанныеМестоположения, ДополнительныеПараметры) Экспорт
	ОбновитьКоординатыНаСервере(ДанныеМестоположения.Координаты);
	Оповестить("ИзменилосьМестоположение");
КонецПроцедуры

&НаСервере
Процедура ОбновитьКоординатыНаСервере(Знач ГеоКоординаты)
	Координаты = ПоместитьВоВременноеХранилище(Новый ХранилищеЗначения(ГеоКоординаты), УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменилисьНастройки"
		ИЛИ ИмяСобытия = "ПрошелОбмен" Тогда
		УстановитьВидимость();		
	КонецЕсли;
	
	Если ИмяСобытия = "ИзменилсяВизит" ИЛИ ИмяСобытия = "ИзменилосьМероприятие" Тогда
		ПодключитьОбработчикОжидания("ПолучитьКоличествоВизитовВРаботе", 0.2, Истина);
	КонецЕсли;
		
	Если ИмяСобытия = "ПрошелОбмен"
		ИЛИ ИмяСобытия = "ВыполненоВосстановлениеИнформационнойБазы" Тогда
		ПодключитьОбработчикОжидания("ПолучитьКоличествоВизитовВРаботе", 0.2, Истина);
	КонецЕсли;
	
	#Если МобильноеПриложениеКлиент Тогда
		ГеоКоординаты = МедПредыГеолокация.ПолучитьКоординаты();
		Если ЗначениеЗаполнено(ГеоКоординаты) Тогда
			Элементы.Местоположение.Заголовок = СтрЗаменить(ПолучитьАдресПоМестоположению(ГеоКоординаты.Координаты), Символы.ПС, ", ");
		Иначе
			Элементы.Местоположение.Заголовок = "Местоположение неопределено!"
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	Если ОбменМобильноеПриложениеВызовСервера.ОбменВключен() Тогда
		Если ОбменМобильноеПриложениеВызовСервера.ВходВЦентральнуюБазуВыполнен() Тогда
			ОткрытьФорму("ОбщаяФорма.Синхронизация");
		КонецЕсли;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ПолучитьКоличествоВизитовВРаботе", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
	
	ОткрытьФорму("ОбщаяФорма.НастройкиПриложения");
	
КонецПроцедуры

&НаКлиенте
Процедура НаборКонстантТекущийПроектПриИзменении(Элемент)
	СохранитьКонстанты();
КонецПроцедуры

&НаКлиенте
Процедура НаборКонстантТекущийКонтрагентПриИзменении(Элемент)
	СохранитьКонстанты();
КонецПроцедуры

&НаСервере
Процедура СохранитьКонстанты();
	НаборКонстантОбъект = РеквизитФормыВЗначение("НаборКонстант");
	НаборКонстантОбъект.Записать();
	ЗначениеВРеквизитФормы(НаборКонстантОбъект, "НаборКонстант");
	ПолучитьКоличествоВизитовВРаботеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьМестоположениеНажатие(Элемент)
	#Если МобильноеПриложениеКлиент Тогда
		Если СредстваГеопозиционирования.ИспользованиеДанныхГеопозиционированияВключено() Тогда
			ИмяПровайдера = СредстваГеопозиционирования.ПолучитьСамогоТочногоПровайдера().Имя;
			СредстваГеопозиционирования.ОбновитьМестоположение(ИмяПровайдера, 60);
			Оповестить();
		КонецЕсли;
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ЗаказовВРаботеНажатие(Элемент)
	ПолучитьКоличествоВизитовВРаботеНаСервере();
КонецПроцедуры

#КонецОбласти

