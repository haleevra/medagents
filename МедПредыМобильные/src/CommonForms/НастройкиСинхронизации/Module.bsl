#Область ВспомогательныеПроцедурыИФункции

&НаСервере
Процедура ЗаписатьКонстанты()
	
	Набор = РеквизитФормыВЗначение("НаборКонстант");
	Набор.Записать();
	ЗначениеВРеквизитФормы(Набор, "НаборКонстант");
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Если ВызовИзФормыОбмена Тогда
		Элементы.ОтправитьИПолучить.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьИзменениеНастроекОбмена()
	
	Если СокрЛП(НаборКонстант.АдресЦентральнойБазы) <> СокрЛП(АдресЦентральнойБазыПриОткрытии)
		ИЛИ СокрЛП(НаборКонстант.ПользовательЦентральнойБазы) <> СокрЛП(ПользовательЦентральнойБазыПриОткрытии)
		ИЛИ НаборКонстант.ПериодЗагрузки <> ПериодЗагрузкиПриОткрытии Тогда
		
		ЦентральныйУзел = ПланыОбмена.МобильноеПриложение.НайтиПоКоду("001");
		Если НЕ ЦентральныйУзел.Пустая() Тогда
			ОбменМобильноеПриложениеВызовСервера.ПереинициализироватьСчетчикиСообщенийНаУзлеПланаОбмена(ЦентральныйУзел);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ВызовИзФормыОбмена", ВызовИзФормыОбмена);
	
	ОбменМобильноеПриложениеВызовСервера.ПроверитьЗаполениеКонстант();
	Набор = Константы.СоздатьНабор();
	Набор.Прочитать();
	ЗначениеВРеквизитФормы(Набор, "НаборКонстант");
	УстановитьВидимость();
	
	АдресЦентральнойБазыПриОткрытии = НаборКонстант.АдресЦентральнойБазы;
	ПользовательЦентральнойБазыПриОткрытии = НаборКонстант.ПользовательЦентральнойБазы;
	ПериодЗагрузкиПриОткрытии = НаборКонстант.ПериодЗагрузки;
	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьИДоступность(УстановитьТекущуюСтраницу = Истина)
	
	ОбменВключен = Константы.СоединениеСЦБУстановлено.Получить();
	
	Элементы.Войти1.Видимость = НЕ ОбменВключен;
	Элементы.Выйти1.Видимость = ОбменВключен;
	Элементы.ГруппаСинхронизировать1.Видимость = ОбменВключен;
			
	Элементы.ГруппаИмяПользователя1.Доступность = Элементы.Войти1.Видимость;
	
	Элементы.ГруппаПароль1.Доступность = Элементы.Войти1.Видимость;
		
	Элементы.ГруппаQRКод1.Видимость = Элементы.Войти1.Видимость;
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ОбменМобильноеПриложениеВызовСервера.ОбменВключен() Тогда
		
		Если ВызовИзФормыОбмена
			И НЕ ОбменМобильноеПриложениеВызовСервера.ЕстьНастройкиОбмена() Тогда
			
			ТекстВопроса = НСтр("ru='Не указан адрес приложения."
			"Отменить синхронизацию данных?';en='No address application."
			"Cancel data synchronization?'");
			ТекстЗаголовка = НСтр("en='Synchronization Settings';ru='Настройки синхронизации данных'");
			
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0, , ТекстЗаголовка);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		ПроверитьИзменениеНастроекОбмена();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДействияКомандныхПанелейФормы

&НаКлиенте
Процедура ОтправитьИПолучить(Команда)
	
	Если ОбменМобильноеПриложениеВызовСервера.ОбменаНеБыло() Тогда
		//ОбщегоНазначенияВызовСервера.УстановитьЗначениеКонстанты("ЭтоСинхронизацияСПокупками", Истина);
	КонецЕсли;
		
	Если НЕ ОбменМобильноеПриложениеВызовСервера.ЕстьНастройкиОбмена() Тогда
		Предупреждение(НСтр("ru='Укажите адрес приложения.';en='Specify the address of the application.'"));
		Возврат;
	КонецЕсли;
	
	Закрыть();
	ОткрытьФорму("ОбщаяФорма.Синхронизация");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	
	ЗаписатьКонстанты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательЦентральнойБазыПриИзменении(Элемент)
	
	УстановитьНаименованиеУстройства();
	ЗаписатьКонстанты();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНаименованиеУстройства()
	
	НаборКонстант.НаименованиеУстройства = "Мобильный клиент (" + НаборКонстант.ПользовательЦентральнойБазы + ")";
	
КонецПроцедуры

&НаКлиенте
Процедура АдресЦентральнойБазыПриИзменении(Элемент)
	
	ИспользованQRКод = Ложь;
	ЗаписатьКонстанты();
	
КонецПроцедуры

&НаКлиенте
Процедура НаборКонстантПериодЗагрузкиПриИзменении(Элемент)
	
	ЗаписатьКонстанты();
	
КонецПроцедуры

&НаКлиенте
Процедура Выйти(Команда)
	
	НаборКонстант.НаименованиеЦентральнойБазы = "";
	НаборКонстант.СоединениеСЦБУстановлено = Ложь;
	НаборКонстант.Пароль = "";
	
	ЗаписатьКонстанты();
	УстановитьВидимостьИДоступность(Ложь);
	
	Оповестить("ПрошелОбмен");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтсканироватьКод(Команда)
	
	#Если МобильноеПриложениеКлиент Тогда
		Если СредстваМультимедиа.ПоддерживаетсяСканированиеШтрихКодов() Тогда
			СредстваМультимедиа.ПоказатьСканированиеШтрихКодов(НСтр("ru='Отсканируйте штрихкод';en='Scan Barcode'"), Новый ОписаниеОповещения("ОбработатьШтрихкод", ЭтаФорма),, ТипШтрихКода.Двухмерный);
		Иначе
			Предупреждение(НСтр("ru='На этом устройстве сканирование штрихкодов не поддерживаются.';en='In this barcode scanning device is not supported.'"));
		КонецЕсли;
	#Иначе
		Штрихкод = "";
		Если ВвестиСтроку(Штрихкод, НСтр("en='Enter Barcode';ru='Введите адрес'"), 200) Тогда
			ОбработатьШтрихкод(Штрихкод, Истина);
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкод(Штрихкод, Результат, Сообщение = "", ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат Тогда
		#Если МобильноеПриложениеКлиент Тогда
			СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
		#КонецЕсли
		МассивПодстрок = ОбщегоНазначенияКлиентСервер.РазложитьСтрокуВМассивПодстрок(Штрихкод, ";");
		Если МассивПодстрок.Количество() = 0 ИЛИ МассивПодстрок[0] <> "sbmcs" Тогда
			Предупреждение(НСтр("ru='Неверный QR-код. Попробуйте еще раз.'"));
			Возврат;
		КонецЕсли;
		Попытка
			НаборКонстант.АдресЦентральнойБазы = МассивПодстрок[1];
			НаборКонстант.ПользовательЦентральнойБазы = МассивПодстрок[2];
			НаборКонстант.Пароль = "";
			УстановитьНаименованиеУстройства();
			Попытка
				НаборКонстант.Пароль = МассивПодстрок[4];
			Исключение
			КонецПопытки;
			//Если Найти(НаборКонстант.АдресЦентральнойБазы, "1cfresh.com") = 0 Тогда
			//	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДругойСервис;
			//Иначе
			//	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаФреш;
			//КонецЕсли;
			ИспользованQRКод = Истина;
			ЗаписатьКонстанты();
		Исключение
			Предупреждение(НСтр("ru='Неподходящий QR-код. Попробуйте другой.'"));
			Возврат;
		КонецПопытки
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УМеняЕстьКодНажатие(Элемент)
	
	ОтсканироватьКод("");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьсяНажатие(Элемент)
	
	Если НСтр("ru='ru';en='en'") = "ru" Тогда
		СтруктураВозврата = ОткрытьФормуМодально(
			"ОбщаяФорма.ПереходНаТестДрайв",
			Новый Структура("ЭтоРегистрация", Истина),
			ЭтаФорма
		);
		Если ТипЗнч(СтруктураВозврата) = Тип("Структура") Тогда
			Если СтруктураВозврата.Свойство("АдресЦентральнойБазы") Тогда
				НаборКонстант.АдресЦентральнойБазы = СтрЗаменить(СтруктураВозврата.АдресЦентральнойБазы, "/e1cib/start", "");
			КонецЕсли;
			Если СтруктураВозврата.Свойство("ПользовательЦентральнойБазы") Тогда
				НаборКонстант.ПользовательЦентральнойБазы = СтруктураВозврата.ПользовательЦентральнойБазы;
			КонецЕсли;
			Если СтруктураВозврата.Свойство("Пароль") Тогда
				НаборКонстант.Пароль = СтруктураВозврата.Пароль;
			КонецЕсли;
			НаборКонстант.НаименованиеУстройства = "Мобильный клиент (" + НаборКонстант.ПользовательЦентральнойБазы + ")";
			ЗаписатьКонстанты();
			Предупреждение(НСтр("ru='Регистрация прошла успешно! Регистрационные данные отправлены вам на почту. "  + Символы.ПС + "Вы уже можете осуществить вход.'"),,"");
		КонецЕсли;
	Иначе
		Предупреждение("This feature is not available for this region.");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Синхронизировать1Нажатие(Элемент)
	
	ОбменМобильноеПриложениеКлиент.Синхронизировать();
	
КонецПроцедуры

&НаКлиенте
Процедура Пароль1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Элементы.Пароль1.РежимПароля = НЕ Элементы.Пароль1.РежимПароля;
	
КонецПроцедуры

#КонецОбласти
